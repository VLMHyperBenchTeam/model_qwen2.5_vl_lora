"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ Qwen2.5-VL.
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
"""

import subprocess
from pathlib import Path
from typing import Optional

from model_interface.model_factory import ModelFactory

try:
    from test_config import MODEL_CONFIG, TEST_CONFIG
except ImportError:
    # Fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è, –µ—Å–ª–∏ test_config.py –Ω–µ –Ω–∞–π–¥–µ–Ω
    MODEL_CONFIG = {
        "model_name": "Qwen2.5-VL-3B-Instruct",
        "device_map": "cuda:0",
        "cache_dir_name": "model_cache",
    }
    TEST_CONFIG = {
        "image_path": "dataset/passport/images/clean/0.jpg",
        "question": "–û–ø–∏—à–∏ –¥–æ–∫—É–º–µ–Ω—Ç.",
        "show_gpu_info": True,
    }


def test_model(
    image_path: Optional[str] = None,
    question: Optional[str] = None,
    model_name: Optional[str] = None,
    device_map: Optional[str] = None,
    show_gpu_info: Optional[bool] = None
) -> Optional[str]:
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å Qwen2.5-VL –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏.
    
    Args:
        image_path: –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
        question: –í–æ–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
        model_name: –ò–º—è –º–æ–¥–µ–ª–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
        device_map: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
        show_gpu_info: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ GPU (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)
        
    Returns:
        –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã
    image_path = image_path or TEST_CONFIG["image_path"]
    question = question or TEST_CONFIG["question"]
    model_name = model_name or MODEL_CONFIG["model_name"]
    device_map = device_map or MODEL_CONFIG["device_map"]
    show_gpu_info = show_gpu_info if show_gpu_info is not None else TEST_CONFIG["show_gpu_info"]
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π
    script_dir = Path(__file__).parent
    cache_dir = script_dir / MODEL_CONFIG["cache_dir_name"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image_file = Path(image_path)
    if not image_file.exists():
        print(f"‚ùå –û–®–ò–ë–ö–ê: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {image_path}")
        return None
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
        print(f"üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ {model_name}...")
        model = ModelFactory.initialize_qwen_model(
            model_name=model_name,
            cache_dir=str(cache_dir),
            device_map=device_map,
            system_prompt=""
        )
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
        print(f"üì∑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
        print(f"‚ùì –í–æ–ø—Ä–æ—Å: {question}")
        print("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç...")
        
        model_answer = model.predict_on_image(image=image_path, question=question)
        
        print(f"\n‚úÖ –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:")
        print("-" * 50)
        print(model_answer)
        print("-" * 50)
        
        if show_gpu_info:
            show_gpu_status()
            
        return model_answer
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –º–æ–¥–µ–ª—å—é: {e}")
        return None


def show_gpu_status() -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ GPU."""
    print("\n" + "="*60)
    print("üñ•Ô∏è  –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û GPU")
    print("="*60)
    try:
        subprocess.run(["nvidia-smi"], check=False)
    except FileNotFoundError:
        print("nvidia-smi –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, NVIDIA –¥—Ä–∞–π–≤–µ—Ä—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ Qwen2.5-VL")
    print("="*60)
    
    result = test_model()
    
    if result:
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–æ–π!")


if __name__ == "__main__":
    main()